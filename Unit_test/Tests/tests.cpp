#include "tests.h"

#include <iostream>

// Rularea tuturor algoritmilor pe seturile de date din fisierele "Unit_test/Inputs/test1.txt" si "Unit_test/Inputs/test2.txt" si compararea rezultatelor cu rezultatele corecte pentru seturile de date respective. Macrocomenzile "TEST()" si "TEST_MULTI_LEVEL()" sunt implementate in "Unit_test/Tests/tests.h"
void run_tests()
{
	std::deque<process> queue;
	std::vector<cpu_burst> execution, expected;
	int process_count = 0;
	double total_wait_time = 0;

	expected = { { 0, 13, 13, 0 }, { 13, 17, 4, 1 }, { 17, 26, 9, 2 }, { 26, 34, 8, 3 }, { 34, 36, 2, 4 }, { 36, 37, 1, 5 }, { 37, 46, 9, 6 }, { 46, 54, 8, 7 }, { 54, 65, 11, 8 }, { 65, 75, 10, 9 } };
	TEST("./Unit_test/Inputs/test1.txt", 1, algorithms::FCFS, expected)

	expected = { { 0, 1, 1, 5 }, { 1, 3, 2, 4 }, { 3, 7, 4, 1 }, { 7, 15, 8, 3 }, { 15, 23, 8, 7 }, { 23, 32, 9, 2 }, { 32, 41, 9, 6 }, { 41, 51, 10, 9 }, { 51, 62, 11, 8 }, { 62, 75, 13, 0 } };
	TEST("./Unit_test/Inputs/test1.txt", 2, algorithms::SJF, expected)

	expected = { { 0, 2, 2, 0 }, { 2, 4, 2, 1 }, { 4, 6, 2, 2 }, { 6, 8, 2, 3 }, { 8, 10, 2, 4 }, { 10, 11, 1, 5 }, { 11, 13, 2, 6 }, { 13, 15, 2, 7 }, { 15, 17, 2, 8 }, { 17, 19, 2, 9 }, { 19, 21, 2, 0 }, { 21, 23, 2, 1 }, { 23, 25, 2, 2 }, { 25, 27, 2, 3 }, { 27, 29, 2, 6 }, { 29, 31, 2, 7 }, { 31, 33, 2, 8 }, { 33, 35, 2, 9 }, { 35, 37, 2, 0 }, { 37, 39, 2, 2 }, { 39, 41, 2, 3 }, { 41, 43, 2, 6 }, { 43, 45, 2, 7 }, { 45, 47, 2, 8 }, { 47, 49, 2, 9 }, { 49, 51, 2, 0 }, { 51, 53, 2, 2 }, { 53, 55, 2, 3 }, { 55, 57, 2, 6 }, { 57, 59, 2, 7 }, { 59, 61, 2, 8 }, { 61, 63, 2, 9 }, { 63, 65, 2, 0 }, { 65, 66, 1, 2 }, { 66, 67, 1, 6 }, { 67, 69, 2, 8 }, { 69, 71, 2, 9 }, { 71, 73, 2, 0 }, { 73, 74, 1, 8 }, { 74, 75, 1, 0 } };
	TEST("./Unit_test/Inputs/test1.txt", 3, algorithms::RR, expected)

	expected = { { 0, 2, 2, 4 }, { 2, 10, 8, 7 }, { 10, 21, 11, 8 }, { 21, 31, 10, 9 }, { 31, 40, 9, 2 }, { 40, 41, 1, 5 }, { 41, 45, 4, 1 }, { 45, 54, 9, 6 }, { 54, 62, 8, 3 }, { 62, 75, 13, 0 } };
	TEST("./Unit_test/Inputs/test1.txt", 4, algorithms::Priority_Scheduling, expected)

	expected = { { 0, 2, 2, 0 }, { 2, 4, 2, 2 }, { 4, 6, 2, 4 }, { 6, 8, 2, 3 }, { 8, 10, 2, 6 }, { 10, 11, 1, 5 }, { 11, 13, 2, 7 }, { 13, 15, 2, 9 }, { 15, 17, 2, 1 }, { 17, 19, 2, 8 }, { 19, 21, 2, 0 }, { 21, 23, 2, 2 }, { 23, 25, 2, 3 }, { 25, 27, 2, 6 }, { 27, 29, 2, 7 }, { 29, 31, 2, 9 }, { 31, 33, 2, 1 }, { 33, 35, 2, 8 }, { 35, 37, 2, 0 }, { 37, 39, 2, 2 }, { 39, 41, 2, 3 }, { 41, 43, 2, 6 }, { 43, 45, 2, 7 }, { 45, 47, 2, 9 }, { 47, 49, 2, 8 }, { 49, 51, 2, 0 }, { 51, 53, 2, 2 }, { 53, 55, 2, 3 }, { 55, 57, 2, 6 }, { 57, 59, 2, 7 }, { 59, 61, 2, 9 }, { 61, 63, 2, 8 }, { 63, 65, 2, 0 }, { 65, 66, 1, 2 }, { 66, 67, 1, 6 }, { 67, 69, 2, 9 }, { 69, 71, 2, 8 }, { 71, 73, 2, 0 }, { 73, 74, 1, 8 }, { 74, 75, 1, 0 } };
	TEST("./Unit_test/Inputs/test1.txt", 5, algorithms::RR_Priority_Scheduling, expected)

	expected = { { 0, 4, 4, 1 }, { 4, 15, 11, 8 }, { 15, 16, 1, 5 }, { 16, 24, 8, 7 }, { 24, 34, 10, 9 }, { 34, 42, 8, 3 }, { 42, 50, 8, 6 }, { 50, 51, 1, 6 }, { 51, 53, 2, 0 }, { 53, 55, 2, 2 }, { 55, 57, 2, 4 }, { 57, 59, 2, 0 }, { 59, 61, 2, 2 }, { 61, 63, 2, 0 }, { 63, 65, 2, 2 }, { 65, 67, 2, 0 }, { 67, 69, 2, 2 }, { 69, 71, 2, 0 }, { 71, 72, 1, 2 }, { 72, 74, 2, 0 }, { 74, 75, 1, 0 } };
	TEST_MULTI_LEVEL("./Unit_test/Inputs/test1.txt", 6, algorithms::Multi_level_Queue_Scheduling, expected)

	expected = { { 0, 1, 1, 0 }, { 1, 2, 1, 1 }, { 2, 7, 5, 2 }, { 7, 14, 7, 3 }, { 14, 25, 11, 4 }, { 25, 29, 4, 5 }, { 29, 34, 5, 6 }, { 34, 35, 1, 7 }, { 35, 38, 3, 8 }, { 38, 45, 7, 9 } };
	TEST("./Unit_test/Inputs/test2.txt", 7, algorithms::FCFS, expected)

	expected = { { 0, 1, 1, 0 }, { 1, 2, 1, 1 }, { 2, 3, 1, 7 }, { 3, 6, 3, 8 }, { 6, 10, 4, 5 }, { 10, 15, 5, 2 }, { 15, 20, 5, 6 }, { 20, 27, 7, 3 }, { 27, 34, 7, 9 }, { 34, 45, 11, 4 } };
	TEST("./Unit_test/Inputs/test2.txt", 8, algorithms::SJF, expected)

	expected = { { 0, 1, 1, 0 }, { 1, 2, 1, 1 }, { 2, 3, 1, 2 }, { 3, 4, 1, 3 }, { 4, 5, 1, 4 }, { 5, 6, 1, 5 }, { 6, 7, 1, 6 }, { 7, 8, 1, 7 }, { 8, 9, 1, 8 }, { 9, 10, 1, 9 }, { 10, 11, 1, 2 }, { 11, 12, 1, 3 }, { 12, 13, 1, 4 }, { 13, 14, 1, 5 }, { 14, 15, 1, 6 }, { 15, 16, 1, 8 }, { 16, 17, 1, 9 }, { 17, 18, 1, 2 }, { 18, 19, 1, 3 }, { 19, 20, 1, 4 }, { 20, 21, 1, 5 }, { 21, 22, 1, 6 }, { 22, 23, 1, 8 }, { 23, 24, 1, 9 }, { 24, 25, 1, 2 }, { 25, 26, 1, 3 }, { 26, 27, 1, 4 }, { 27, 28, 1, 5 }, { 28, 29, 1, 6 }, { 29, 30, 1, 9 }, { 30, 31, 1, 2 }, { 31, 32, 1, 3 }, { 32, 33, 1, 4 }, { 33, 34, 1, 6 }, { 34, 35, 1, 9 }, { 35, 36, 1, 3 }, { 36, 37, 1, 4 }, { 37, 38, 1, 9 }, { 38, 39, 1, 3 }, { 39, 40, 1, 4 }, { 40, 41, 1, 9 }, { 41, 42, 1, 4 }, { 42, 43, 1, 4 }, { 43, 44, 1, 4 }, { 44, 45, 1, 4 } };
	TEST("./Unit_test/Inputs/test2.txt", 9, algorithms::RR, expected)

	expected = { { 0, 1, 1, 1 }, { 1, 6, 5, 2 }, { 6, 7, 1, 7 }, { 7, 10, 3, 8 }, { 10, 17, 7, 9 }, { 17, 24, 7, 3 }, { 24, 35, 11, 4 }, { 35, 39, 4, 5 }, { 39, 40, 1, 0 }, { 40, 45, 5, 6 } };
	TEST("./Unit_test/Inputs/test2.txt", 10, algorithms::Priority_Scheduling, expected)

	expected = { { 0, 1, 1, 2 }, { 1, 2, 1, 6 }, { 2, 3, 1, 3 }, { 3, 4, 1, 7 }, { 4, 5, 1, 8 }, { 5, 6, 1, 9 }, { 6, 7, 1, 0 }, { 7, 8, 1, 1 }, { 8, 9, 1, 4 }, { 9, 10, 1, 5 }, { 10, 11, 1, 2 }, { 11, 12, 1, 6 }, { 12, 13, 1, 3 }, { 13, 14, 1, 8 }, { 14, 15, 1, 9 }, { 15, 16, 1, 4 }, { 16, 17, 1, 5 }, { 17, 18, 1, 2 }, { 18, 19, 1, 6 }, { 19, 20, 1, 3 }, { 20, 21, 1, 8 }, { 21, 22, 1, 9 }, { 22, 23, 1, 4 }, { 23, 24, 1, 5 }, { 24, 25, 1, 2 }, { 25, 26, 1, 6 }, { 26, 27, 1, 3 }, { 27, 28, 1, 9 }, { 28, 29, 1, 4 }, { 29, 30, 1, 5 }, { 30, 31, 1, 2 }, { 31, 32, 1, 6 }, { 32, 33, 1, 3 }, { 33, 34, 1, 9 }, { 34, 35, 1, 4 }, { 35, 36, 1, 3 }, { 36, 37, 1, 9 }, { 37, 38, 1, 4 }, { 38, 39, 1, 3 }, { 39, 40, 1, 9 }, { 40, 41, 1, 4 }, { 41, 42, 1, 4 }, { 42, 43, 1, 4 }, { 43, 44, 1, 4 }, { 44, 45, 1, 4 } };
	TEST("./Unit_test/Inputs/test2.txt", 11, algorithms::RR_Priority_Scheduling, expected)

	expected = { { 0, 1, 1, 0 }, { 1, 2, 1, 1 }, { 2, 6, 4, 5 }, { 6, 17, 11, 4 }, { 17, 18, 1, 3 }, { 18, 19, 1, 7 }, { 19, 20, 1, 8 }, { 20, 21, 1, 9 }, { 21, 22, 1, 3 }, { 22, 23, 1, 8 }, { 23, 24, 1, 9 }, { 24, 25, 1, 3 }, { 25, 26, 1, 8 }, { 26, 27, 1, 9 }, { 27, 28, 1, 3 }, { 28, 29, 1, 9 }, { 29, 30, 1, 3 }, { 30, 31, 1, 9 }, { 31, 32, 1, 3 }, { 32, 33, 1, 9 }, { 33, 34, 1, 3 }, { 34, 35, 1, 9 }, { 35, 40, 5, 2 }, { 40, 45, 5, 6 } };
	TEST_MULTI_LEVEL("./Unit_test/Inputs/test2.txt", 12, algorithms::Multi_level_Queue_Scheduling, expected)
}